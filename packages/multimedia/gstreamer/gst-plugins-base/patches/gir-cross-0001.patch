diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/allocators/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/allocators/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/allocators/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/allocators/meson.build	2024-01-30 09:00:11.388975597 +0200
@@ -32,6 +32,8 @@
 allocators_gen_sources  = []
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/allocators/allocators.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : gst_allocators_sources + gst_allocators_headers,
     'namespace' : 'GstAllocators',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/app/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/app/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/app/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/app/meson.build	2024-01-30 09:00:11.404829166 +0200
@@ -42,6 +42,8 @@
 library_def = {'lib': gstapp}
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/app/app.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : app_sources + app_headers + [gstapp_c] + [gstapp_h],
     'namespace' : 'GstApp',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/audio/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/audio/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/audio/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/audio/meson.build	2024-01-30 09:00:11.408792558 +0200
@@ -163,6 +163,8 @@
 library_def = {'lib': gstaudio}
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/audio/audio.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : audio_src + audio_headers + [gstaudio_c] + [gstaudio_h],
     'namespace' : 'GstAudio',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/gl/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/gl/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/gl/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/gl/meson.build	2024-01-30 09:00:11.400865773 +0200
@@ -1096,6 +1096,8 @@
   )
 
   if build_gir
+    gst_gir_extra_args = ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+        '--use-binary-wrapper=' + get_option('binary_wrapper')]
     gir = {
         'sources' : gl_sources + [gl_enumtypes_h] + [gl_enumtypes_c] + gir_gl_headers,
         'namespace' : 'GstGL',
@@ -1105,7 +1107,7 @@
         'export_packages' : pkg_name,
         'includes' : ['Gst-1.0', 'GstBase-1.0', 'GstVideo-1.0'],
         'install' : true,
-        'extra_args' : gir_init_section + ['--c-include=gst/gl/gl.h'],
+        'extra_args' : gir_init_section + ['--c-include=gst/gl/gl.h'] + gst_gir_extra_args,
         'dependencies' : [video_dep, gst_dep, gst_base_dep],
     }
     library_def += {'gir': [gir]}
@@ -1139,6 +1141,8 @@
     )
     gl_x11_gir = []
     if build_gir
+      gst_gir_extra_args = ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+          '--use-binary-wrapper=' + get_option('binary_wrapper')]
       gir = {
         'sources' : gl_x11_sources + gl_x11_headers,
         'namespace' : 'GstGLX11',
@@ -1148,7 +1152,7 @@
         'export_packages' : 'gstreamer-gl-x11-1.0',
         'includes' : ['Gst-1.0', 'GstBase-1.0', 'GstVideo-1.0'],
         'install' : true,
-        'extra_args' : gir_init_section + ['--c-include=gst/gl/x11/x11.h'],
+        'extra_args' : gir_init_section + ['--c-include=gst/gl/x11/x11.h'] + gst_gir_extra_args,
         'dependencies' : [video_dep, gst_dep, gst_base_dep]
       }
       gir_dict = gir + {'includes': gir['includes'] + ['GstGL-1.0']}
@@ -1175,6 +1179,8 @@
     )
     gl_wayland_gir = []
     if build_gir
+      gst_gir_extra_args = ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+          '--use-binary-wrapper=' + get_option('binary_wrapper')]
       gir = {
         'sources' : gl_wayland_sources + gl_wayland_headers,
         'namespace' : 'GstGLWayland',
@@ -1184,7 +1190,7 @@
         'export_packages' : 'gstreamer-gl-wayland-1.0',
         'includes' : ['Gst-1.0', 'GstBase-1.0', 'GstVideo-1.0'],
         'install' : true,
-        'extra_args' : gir_init_section + ['--c-include=gst/gl/wayland/wayland.h'],
+        'extra_args' : gir_init_section + ['--c-include=gst/gl/wayland/wayland.h'] + gst_gir_extra_args,
         'dependencies' : [video_dep, gst_dep, gst_base_dep]
       }
 
@@ -1211,6 +1217,8 @@
     )
     gl_egl_gir = []
     if build_gir
+      gst_gir_extra_args = ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+          '--use-binary-wrapper=' + get_option('binary_wrapper')]
       gir = {
         'sources' : gl_egl_sources + gl_egl_headers,
         'namespace' : 'GstGLEGL',
@@ -1220,7 +1228,7 @@
         'export_packages' : pkg_name,
         'includes' : ['Gst-1.0', 'GstBase-1.0', 'GstVideo-1.0'],
         'install' : true,
-        'extra_args' : gir_init_section + ['--c-include=gst/gl/egl/egl.h'],
+        'extra_args' : gir_init_section + ['--c-include=gst/gl/egl/egl.h'] + gst_gir_extra_args,
         'dependencies' : [video_dep, gst_dep, gst_base_dep]
       }
       gir_dict = gir + {'includes': gir['includes'] + ['GstGL-1.0']}
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/pbutils/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/pbutils/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/pbutils/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/pbutils/meson.build	2024-01-30 09:00:11.412755950 +0200
@@ -73,6 +73,8 @@
 pbutils_gen_sources = [gstpbutils_h, gst_pbutils_version_h]
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/pbutils/pbutils.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : pbutils_sources + pbutils_headers + [gstpbutils_h, gst_pbutils_version_h],
     'namespace' : 'GstPbutils',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/rtp/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/rtp/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/rtp/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/rtp/meson.build	2024-01-30 09:00:11.388975597 +0200
@@ -59,6 +59,8 @@
 rtp_gen_sources = [gstrtp_enum_h]
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/rtp/rtp.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : rtp_sources + rtp_headers + [gstrtp_enum_c] + [gstrtp_enum_h],
     'namespace' : 'GstRtp',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/rtsp/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/rtsp/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/rtsp/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/rtsp/meson.build	2024-01-30 09:00:11.408792558 +0200
@@ -64,6 +64,8 @@
 rtsp_gen_sources = [gstrtsp_h]
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/rtsp/rtsp.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : rtsp_sources + rtsp_headers + [gstrtsp_c] + [gstrtsp_h],
     'namespace' : 'GstRtsp',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/sdp/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/sdp/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/sdp/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/sdp/meson.build	2024-01-30 09:00:11.408792558 +0200
@@ -33,6 +33,8 @@
 
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/sdp/sdp.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : gst_sdp_sources + gst_sdp_headers,
     'namespace' : 'GstSdp',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/tag/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/tag/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/tag/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/tag/meson.build	2024-01-30 09:00:11.388975597 +0200
@@ -97,6 +97,8 @@
 
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/tag/tag.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : tag_sources + tag_headers + [gsttag_h] + [gsttag_c],
     'namespace' : 'GstTag',
diff -rNu gst-plugins-base-1.22.0/gst-libs/gst/video/meson.build gst-plugins-base-1.22.0.new/gst-libs/gst/video/meson.build
--- gst-plugins-base-1.22.0/gst-libs/gst/video/meson.build	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/gst-libs/gst/video/meson.build	2024-01-30 09:00:11.388975597 +0200
@@ -157,6 +157,8 @@
 
 if build_gir
   gst_gir_extra_args = gir_init_section + [ '--c-include=gst/video/video.h' ]
+  gst_gir_extra_args += ['--lib-dirs-envvar=DUMMY_UNUSED_ENVVAR',
+    '--use-binary-wrapper=' + get_option('binary_wrapper')]
   gir = {
     'sources' : video_sources + video_headers + [gstvideo_c] + [gstvideo_h],
     'namespace' : 'GstVideo',
diff -rNu gst-plugins-base-1.22.0/meson_options.txt gst-plugins-base-1.22.0.new/meson_options.txt
--- gst-plugins-base-1.22.0/meson_options.txt	2023-01-23 21:29:34.000000000 +0200
+++ gst-plugins-base-1.22.0.new/meson_options.txt	2024-01-30 08:42:32.763586541 +0200
@@ -88,3 +88,7 @@
        description : 'package origin URL to use in plugins')
 option('doc', type : 'feature', value : 'auto', yield: true,
        description: 'Enable documentation.')
+
+option('binary_wrapper', type: 'string',
+  description: 'Use a wrapper to run gicompiler and binaries produced by giscanner (useful when cross-compiling)'
+)
